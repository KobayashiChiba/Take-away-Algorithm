import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D
import numpy as np

""" 
1703604914
[[  0,   1], [  0,   3], [  0,   1], [  1,   1], [  0,   1], [  0,   1], [  0,   1], [  0,   1], [  0,   1], [  0,   1], [  0,   1], [  0,   1],
[  0,   8], [  0,  23], [  3,   1], [ 44,  14], [ 10,  13], [  0,   1], [  2,   1], [ 30,  15], [  1,   2], [  0,   1], [  0,   1], [  0,   1],
[  8,   1], [ 20,   3], [ 31,  43], [ 32,   8], [ 28,   4], [ 42,  19], [  5,   1], [ 31,  15], [  0,   4], [  0,   1], [  0,   1], [  0,   1],
[  7,   1], [ 25,   1], [ 35,   7], [ 10,   9], [ 19,  10], [ 16,  21], [ 20,   1], [ 16,   1], [  9,   1], [  0,   1], [  0,   1], [  0,   1],
[  4,   1], [ 11,   1], [ 20,  24], [  4,  17], [  6,  16], [ 31,   1], [ 33,   1], [ 23,   3], [ 26,  13], [  0,   1], [  0,   1], [  0,   1],
[  7,   1], [ 38,   1], [ 41,   9], [ 10,   1], [ 56,   1], [ 18,   5], [ 24,  35], [ 14,   7], [  0,  19], [  0,   1], [  0,   1], [  0,   1],
[  2,   1], [ 21,  34], [ 11,   1], [ 15,  17], [ 16,   3], [ 20,   1], [ 43,   1], [ 13,   1], [  0,   1], [  0,   1], [  0,   1], [  0,   1],
[  2,   1], [ 42,   1], [ 17,   1], [ 29,  17], [ 49,   4], [ 21,   3], [ 14,  36], [ 24,   6], [ 16,   1], [  0,   1], [  0,   1], [  0,   1],
[  0,   1], [  4,   1], [  1,  34], [  5,   1], [ 16,   2], [  4,  29], [ 28,   1], [ 31,   1], [ 11,   1], [  0,   1], [  0,   1], [  0,   1],
[  0,   1], [  8,   1], [ 31,   2], [ 27,   1], [ 32,  25], [ 19,   2], [ 22,  23], [  6,  23], [  1,   1], [  0,   1], [  0,   1], [  0,   1],
[  0,   1], [ 28,   1], [ 11,   1], [ 19,   1], [  8,  19], [ 32,   5], [ 23,   2], [  2,   3], [  0,   1], [  0,   1], [  0,   1], [  0,   1],
[  0,   1], [  3,   2], [ 25,   3], [ 64,   1], [ 48,  13], [ 27,  21], [ 17,  24], [ 27,  49], [  0,   1], [  0,   1], [  0,   1], [  0,   1],
[  1,   1], [ 40,   8], [ 59,  28], [  5,   3], [  7,  28], [  3,   2], [  5,   6], [  2,   2], [  0,   1], [  0,   1], [  0,   1], [  0,   1],
[  0,   1], [ 27,   1], [ 38,   1], [  4,   1], [ 54,   1], [ 10,   1], [ 38,  28], [ 17,   3], [  8,   1], [  0,   1], [  0,   1], [  0,   1],
[  0,   1], [  6,   1], [ 50,   1], [  4,   1], [ 10,   1], [  2,   1], [  6,   1], [ 22,   1], [  6,   1], [  0,   1], [  0,   1], [  0,   1],
[  0,   1], [  0,   1], [  1,   1], [  0,   1], [  0,   1], [  0,   1], [  0,   1], [  0,   1], [  0,   1], [  0,   1], [  0,   1], [  0,   1],
]
1.1671
base cost = 2533.77
final cost: 434.107
[[  0,   1], [  0,   3], [  0,   1], [  1,   1], [  0,   1], [  0,   1], [  0,   1], [  0,   1], [  0,   1], [  0,   1], [  0,   1], [  0,   1],
[  0,   1], [  0,   1], [  3,   1], [ 44,  22], [ 10,   5], [  0,   1], [  2,   1], [ 30,  12], [  1,   1], [  0,   1], [  0,   1], [  0,   1],
[  8,   5], [ 20,  15], [ 31,  19], [ 32,  20], [ 28,  14], [ 42,  19], [  5,   3], [ 31,  13], [  0,   1], [  0,   1], [  0,   1], [  0,   1],
[  7,   4], [ 25,  15], [ 35,  17], [ 10,   5], [ 19,  10], [ 16,   7], [ 20,   9], [ 16,   5], [  9,   4], [  0,   1], [  0,   1], [  0,   1],
[  4,   3], [ 11,   5], [ 20,  10], [  4,   2], [  6,   2], [ 31,  13], [ 33,  13], [ 23,   9], [ 26,   9], [  0,   1], [  0,   1], [  0,   1],
[  7,   3], [ 38,  13], [ 41,  17], [ 10,   4], [ 56,  19], [ 18,   7], [ 24,  11], [ 14,   7], [  0,   1], [  0,   1], [  0,   1], [  0,   1],
[  2,   1], [ 21,   6], [ 11,   4], [ 15,   5], [ 16,   7], [ 20,   9], [ 43,  25], [ 13,   7], [  0,   1], [  0,   1], [  0,   1], [  0,   1],
[  2,   1], [ 42,  13], [ 17,   6], [ 29,  11], [ 49,  22], [ 21,  10], [ 14,   8], [ 24,  18], [ 16,   9], [  0,   1], [  0,   1], [  0,   1],
[  0,   1], [  4,   1], [  1,   1], [  5,   2], [ 16,   7], [  4,   2], [ 28,  17], [ 31,  21], [ 11,   9], [  0,   1], [  0,   1], [  0,   1],
[  0,   1], [  8,   2], [ 31,   8], [ 27,   9], [ 32,  13], [ 19,  10], [ 22,  15], [  6,   5], [  1,   1], [  0,   1], [  0,   1], [  0,   1],
[  0,   1], [ 28,   8], [ 11,   3], [ 19,   7], [  8,   3], [ 32,  15], [ 23,  14], [  2,   1], [  0,   1], [  0,   1], [  0,   1], [  0,   1],
[  0,   1], [  3,   1], [ 25,   7], [ 64,  20], [ 48,  19], [ 27,  13], [ 17,  10], [ 27,  19], [  0,   1], [  0,   1], [  0,   1], [  0,   1],
[  1,   1], [ 40,   8], [ 59,  14], [  5,   1], [  7,   2], [  3,   1], [  5,   2], [  2,   1], [  0,   1], [  0,   1], [  0,   1], [  0,   1],
[  0,   1], [ 27,   5], [ 38,   8], [  4,   1], [ 54,  19], [ 10,   4], [ 38,  16], [ 17,   8], [  8,   5], [  0,   1], [  0,   1], [  0,   1],
[  0,   1], [  6,   1], [ 50,   9], [  4,   1], [ 10,   3], [  2,   1], [  6,   3], [ 22,   9], [  6,   3], [  0,   1], [  0,   1], [  0,   1],
[  0,   1], [  0,   1], [  1,   1], [  0,   1], [  0,   1], [  0,   1], [  0,   1], [  0,   1], [  0,   1], [  0,   1], [  0,   1], [  0,   1],
]
"""

data1 = np.array([[  0,   1], [  0,   3], [  0,   1], [  1,   1], [  0,   1], [  0,   1], [  0,   1], [  0,   1], [  0,   1], [  0,   1], [  0,   1], [  0,   1],
[  0,   8], [  0,  23], [  3,   1], [ 44,  14], [ 10,  13], [  0,   1], [  2,   1], [ 30,  15], [  1,   2], [  0,   1], [  0,   1], [  0,   1],
[  8,   1], [ 20,   3], [ 31,  43], [ 32,   8], [ 28,   4], [ 42,  19], [  5,   1], [ 31,  15], [  0,   4], [  0,   1], [  0,   1], [  0,   1],
[  7,   1], [ 25,   1], [ 35,   7], [ 10,   9], [ 19,  10], [ 16,  21], [ 20,   1], [ 16,   1], [  9,   1], [  0,   1], [  0,   1], [  0,   1],
[  4,   1], [ 11,   1], [ 20,  24], [  4,  17], [  6,  16], [ 31,   1], [ 33,   1], [ 23,   3], [ 26,  13], [  0,   1], [  0,   1], [  0,   1],
[  7,   1], [ 38,   1], [ 41,   9], [ 10,   1], [ 56,   1], [ 18,   5], [ 24,  35], [ 14,   7], [  0,  19], [  0,   1], [  0,   1], [  0,   1],
[  2,   1], [ 21,  34], [ 11,   1], [ 15,  17], [ 16,   3], [ 20,   1], [ 43,   1], [ 13,   1], [  0,   1], [  0,   1], [  0,   1], [  0,   1],
[  2,   1], [ 42,   1], [ 17,   1], [ 29,  17], [ 49,   4], [ 21,   3], [ 14,  36], [ 24,   6], [ 16,   1], [  0,   1], [  0,   1], [  0,   1],
[  0,   1], [  4,   1], [  1,  34], [  5,   1], [ 16,   2], [  4,  29], [ 28,   1], [ 31,   1], [ 11,   1], [  0,   1], [  0,   1], [  0,   1],
[  0,   1], [  8,   1], [ 31,   2], [ 27,   1], [ 32,  25], [ 19,   2], [ 22,  23], [  6,  23], [  1,   1], [  0,   1], [  0,   1], [  0,   1],
[  0,   1], [ 28,   1], [ 11,   1], [ 19,   1], [  8,  19], [ 32,   5], [ 23,   2], [  2,   3], [  0,   1], [  0,   1], [  0,   1], [  0,   1],
[  0,   1], [  3,   2], [ 25,   3], [ 64,   1], [ 48,  13], [ 27,  21], [ 17,  24], [ 27,  49], [  0,   1], [  0,   1], [  0,   1], [  0,   1],
[  1,   1], [ 40,   8], [ 59,  28], [  5,   3], [  7,  28], [  3,   2], [  5,   6], [  2,   2], [  0,   1], [  0,   1], [  0,   1], [  0,   1],
[  0,   1], [ 27,   1], [ 38,   1], [  4,   1], [ 54,   1], [ 10,   1], [ 38,  28], [ 17,   3], [  8,   1], [  0,   1], [  0,   1], [  0,   1],
[  0,   1], [  6,   1], [ 50,   1], [  4,   1], [ 10,   1], [  2,   1], [  6,   1], [ 22,   1], [  6,   1], [  0,   1], [  0,   1], [  0,   1],
[  0,   1], [  0,   1], [  1,   1], [  0,   1], [  0,   1], [  0,   1], [  0,   1], [  0,   1], [  0,   1], [  0,   1], [  0,   1], [  0,   1]
])

data2 = np.array([[  0,   1], [  0,   3], [  0,   1], [  1,   1], [  0,   1], [  0,   1], [  0,   1], [  0,   1], [  0,   1], [  0,   1], [  0,   1], [  0,   1],
[  0,   1], [  0,   1], [  3,   1], [ 44,  22], [ 10,   5], [  0,   1], [  2,   1], [ 30,  12], [  1,   1], [  0,   1], [  0,   1], [  0,   1],
[  8,   5], [ 20,  15], [ 31,  19], [ 32,  20], [ 28,  14], [ 42,  19], [  5,   3], [ 31,  13], [  0,   1], [  0,   1], [  0,   1], [  0,   1],
[  7,   4], [ 25,  15], [ 35,  17], [ 10,   5], [ 19,  10], [ 16,   7], [ 20,   9], [ 16,   5], [  9,   4], [  0,   1], [  0,   1], [  0,   1],
[  4,   3], [ 11,   5], [ 20,  10], [  4,   2], [  6,   2], [ 31,  13], [ 33,  13], [ 23,   9], [ 26,   9], [  0,   1], [  0,   1], [  0,   1],
[  7,   3], [ 38,  13], [ 41,  17], [ 10,   4], [ 56,  19], [ 18,   7], [ 24,  11], [ 14,   7], [  0,   1], [  0,   1], [  0,   1], [  0,   1],
[  2,   1], [ 21,   6], [ 11,   4], [ 15,   5], [ 16,   7], [ 20,   9], [ 43,  25], [ 13,   7], [  0,   1], [  0,   1], [  0,   1], [  0,   1],
[  2,   1], [ 42,  13], [ 17,   6], [ 29,  11], [ 49,  22], [ 21,  10], [ 14,   8], [ 24,  18], [ 16,   9], [  0,   1], [  0,   1], [  0,   1],
[  0,   1], [  4,   1], [  1,   1], [  5,   2], [ 16,   7], [  4,   2], [ 28,  17], [ 31,  21], [ 11,   9], [  0,   1], [  0,   1], [  0,   1],
[  0,   1], [  8,   2], [ 31,   8], [ 27,   9], [ 32,  13], [ 19,  10], [ 22,  15], [  6,   5], [  1,   1], [  0,   1], [  0,   1], [  0,   1],
[  0,   1], [ 28,   8], [ 11,   3], [ 19,   7], [  8,   3], [ 32,  15], [ 23,  14], [  2,   1], [  0,   1], [  0,   1], [  0,   1], [  0,   1],
[  0,   1], [  3,   1], [ 25,   7], [ 64,  20], [ 48,  19], [ 27,  13], [ 17,  10], [ 27,  19], [  0,   1], [  0,   1], [  0,   1], [  0,   1],
[  1,   1], [ 40,   8], [ 59,  14], [  5,   1], [  7,   2], [  3,   1], [  5,   2], [  2,   1], [  0,   1], [  0,   1], [  0,   1], [  0,   1],
[  0,   1], [ 27,   5], [ 38,   8], [  4,   1], [ 54,  19], [ 10,   4], [ 38,  16], [ 17,   8], [  8,   5], [  0,   1], [  0,   1], [  0,   1],
[  0,   1], [  6,   1], [ 50,   9], [  4,   1], [ 10,   3], [  2,   1], [  6,   3], [ 22,   9], [  6,   3], [  0,   1], [  0,   1], [  0,   1],
[  0,   1], [  0,   1], [  1,   1], [  0,   1], [  0,   1], [  0,   1], [  0,   1], [  0,   1], [  0,   1], [  0,   1], [  0,   1], [  0,   1]
])

iter = 0
drivers1 = [0] * (16*12)
orders1 = [0] * (16*12)
drivers2 = [0] * (16*12)
orders2 = [0] * (16*12)
while iter < 16*12:
    drivers1[iter] = data1[iter,1]
    orders1[iter] = data1[iter,0]
    drivers2[iter] = data2[iter,1]
    orders2[iter] = data2[iter,0]
    iter += 1

# 生成x坐标和y坐标的网格
x, y = np.meshgrid(np.arange(1, 17), np.arange(1, 13))

# 将x和y展开成一维数组
x = x.flatten()
y = y.flatten()

# 创建一个三维坐标轴
fig1 = plt.figure()
fig2 = plt.figure()

# 绘制 driver1 的立体柱状图
ax1 = fig1.add_subplot(121, projection='3d')
ax1.bar3d(x, y, [0] * len(x), dx=1, dy=1, dz=drivers1, color='b', alpha=0.8)
ax1.set_title('driver1')

# 绘制 order1 的立体柱状图
ax2 = fig1.add_subplot(122, projection='3d')
ax2.bar3d(x, y, [0] * len(x), dx=1, dy=1, dz=orders1, color='r', alpha=0.8)
ax2.set_title('order1')

# 绘制 driver2 的立体柱状图
ax3 = fig2.add_subplot(121, projection='3d')
ax3.bar3d(x, y, [0] * len(x), dx=1, dy=1, dz=drivers2, color='b', alpha=0.8)
ax3.set_title('driver2')

# 绘制 order2 的立体柱状图
ax4 = fig2.add_subplot(122, projection='3d')
ax4.bar3d(x, y, [0] * len(x), dx=1, dy=1, dz=orders2, color='r', alpha=0.8)
ax4.set_title('order2')

# 显示图形
plt.show()

fig1.savefig('output_figure1.png')
fig2.savefig('output_figure2.png')